<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>贵安新区</title>
    <link rel="stylesheet" href="/scripts/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.4/css/ol.css" type="text/css">
    <script src="https://openlayers.org/en/v4.6.4/build/ol.js"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <link rel="stylesheet" href="css/index.css">
</head>
<body>
<div class="container-fluid" id="container">
    <% if (originFile) { %>
    <h2><%= originFile %></h2>
    <% } %>
    <div class="row">
        <div class="col-9">
            <div  id="map" class="map" ></div>
        </div>
        <div class="col" style="width: 100%">
            <form action="/postOriginFile" enctype="multipart/form-data" method="post" id="originForm">
                <div class="kv">
                    <label>原geojson文件：</label>
                    <input type="file" id="originFile" name="originFile">
                </div>
            </form>
            <div class="kv">
                <label>新geojson文件：</label>
                <select>
                    <option>上传文件</option>
                    <option>手绘</option>
                </select>
                <input type="file">
            </div>
            <div class="buttonGroup">
                <button>预览</button>
                <button>下载</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function(){
        $(".row").height($(window).height())
        $("#originFile").on("change",function(){
            $("#originForm").submit()
        })











        var image = new ol.style.Circle({
            radius: 5,
            fill: null,
            stroke: new ol.style.Stroke({color: 'red', width: 1})
        });

        var styles = {
            'Point': new ol.style.Style({
                image: image
            }),
            'LineString': new ol.style.Style({
                stroke: new ol.style.Stroke({
                    color: 'green',
                    width: 1
                })
            }),
            'MultiLineString': new ol.style.Style({
                stroke: new ol.style.Stroke({
                    color: 'green',
                    width: 1
                })
            }),
            'MultiPoint': new ol.style.Style({
                image: image
            }),
            'MultiPolygon': new ol.style.Style({
                stroke: new ol.style.Stroke({
                    color: 'yellow',
                    width: 1
                }),
                fill: new ol.style.Fill({
                    color: 'rgba(255, 255, 0, 0.1)'
                })
            }),
            'Polygon': new ol.style.Style({
                stroke: new ol.style.Stroke({
                    color: 'blue',
                    lineDash: [4],
                    width: 3
                }),
                fill: new ol.style.Fill({
                    color: 'rgba(0, 0, 255, 0.1)'
                })
            }),
            'GeometryCollection': new ol.style.Style({
                stroke: new ol.style.Stroke({
                    color: 'magenta',
                    width: 2
                }),
                fill: new ol.style.Fill({
                    color: 'magenta'
                }),
                image: new ol.style.Circle({
                    radius: 10,
                    fill: null,
                    stroke: new ol.style.Stroke({
                        color: 'magenta'
                    })
                })
            }),
            'Circle': new ol.style.Style({
                stroke: new ol.style.Stroke({
                    color: 'red',
                    width: 2
                }),
                fill: new ol.style.Fill({
                    color: 'rgba(255,0,0,0.2)'
                })
            })
        };

        var styleFunction = function(feature) {
            return styles[feature.getGeometry().getType()];
        };
        var vectorSource = new ol.source.Vector({
            format: new ol.format.GeoJSON()
        });
        var vectorLayer = new ol.layer.Vector({
            source: vectorSource,
            style: styleFunction
        });

        var map = new ol.Map({
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                }),
                vectorLayer
            ],
            target: 'map',
            view: new ol.View({
                center: [0, 0],
                zoom: 2
            })
        });
    })
</script>
</body>
<script src="/scripts/jquery.slim.min.js"></script>
<script src="/scripts/umd/popper.min.js"></script>
<script src="/scripts/js/bootstrap.min.js"></script>
</html>